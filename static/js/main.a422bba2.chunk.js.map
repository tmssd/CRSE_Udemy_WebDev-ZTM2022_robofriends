{"version":3,"sources":["../../../Udemy_WebDev-ZTM2021/robofriends/src/components/Card.js","../../../Udemy_WebDev-ZTM2021/robofriends/src/components/ErrorBoundry.js","../../../Udemy_WebDev-ZTM2021/robofriends/src/components/CardList.js","../../../Udemy_WebDev-ZTM2021/robofriends/src/components/SearchBox.js","../../../Udemy_WebDev-ZTM2021/robofriends/src/components/Scroll.js","../../../Udemy_WebDev-ZTM2021/robofriends/src/containers/App.js","../../../Udemy_WebDev-ZTM2021/robofriends/src/reportWebVitals.js","../../../Udemy_WebDev-ZTM2021/robofriends/src/index.js"],"names":["Card","_ref","name","email","id","react_default","a","createElement","className","src","concat","alt","ErrorBoundry","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","children","Component","CardList","robots","map","user","i","components_Card","key","SearchBox","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","App","onSearchChange","event","searchfield","target","value","_this2","fetch","then","response","json","users","_this$state","filteredRobots","filter","robot","toLowerCase","includes","length","components_SearchBox","components_Scroll","components_ErrorBoundry","components_CardList","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","src_containers_App"],"mappings":"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","file":"static/js/main.a422bba2.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ name, email, id }) => {\n    return (\n        <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n            <img src={`https://robohash.org/${id}?size=200x200`} alt=\"robots\" />\n            <div>\n                <h4>{name}</h4>\n                <p>{email}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;\n","import React, {Component} from 'react';\n\nclass ErrorBoundry extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({ hasError: true })\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return <h1>Oooops. That is not good</h1>\n        }\n        return this.props.children\n    }\n}\n\nexport default ErrorBoundry;\n","import React from 'react';\nimport Card from './Card';\n// eslint-disable-next-line\nimport ErrorBoundry from './ErrorBoundry';\n\nconst CardList = ({ robots }) => {\n    /* this piece of code intended for invoking the ErrorBoundry Component(that is useful for production environment) */\n    // if (true) {\n    //     throw new Error('NOOOOOO!')\n    // }\n\n    return (\n        <div>\n            {\n                robots.map((user, i) => {\n                    return (\n                        <Card\n                            key={i}\n                            id={user.id}\n                            name={user.name}\n                            email={user.email}\n                        />\n                    );\n                })\n            }\n        </div>\n    );\n}\n\nexport default CardList;\n","import React from 'react';\n\nconst SearchBox = ({ searchChange }) => {\n    return (\n        <div className=\"pa2\">\n            <input\n                className=\"pa3 ba b--green bg-lightest-blue\"\n                type='search'\n                placeholder='search robots'\n                onChange={searchChange}\n            />\n        </div>\n    );\n}\n\nexport default SearchBox;\n","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style={{ overflowY: 'scroll', border: '5px solid black', height: '800px'}}>\n            {props.children}\n        </div>\n    )\n};\n\nexport default Scroll;\n","import React, {Component} from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport './App.css';\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            robots: [],\n            searchfield: '',\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => this.setState({ robots: users }));\n    }\n\n    onSearchChange = (event) => {\n        this.setState({searchfield: event.target.value})\n    }\n\n    render() {\n        const { robots, searchfield } = this.state;\n        const filteredRobots = robots.filter(robot => {\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n        });\n        return !robots.length ?\n            <h1 className=\"tc\">Loading</h1> :\n            (\n                <div className=\"tc\">\n                    <h1 className=\"f1\">RoboFriends</h1>\n                    <SearchBox searchChange={this.onSearchChange} />\n                    <Scroll>\n                        <ErrorBoundry>\n                            <CardList robots={filteredRobots} />\n                        </ErrorBoundry>\n                    </Scroll>\n                </div>\n            );\n    };\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.createRoot(document.getElementById('root')).render(<App />);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}